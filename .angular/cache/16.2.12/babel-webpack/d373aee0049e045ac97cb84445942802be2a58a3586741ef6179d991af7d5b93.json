{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\nimport { HttpResponse } from '@angular/common/http';\nimport { filter, map } from 'rxjs/operators';\nimport { RequestBuilder } from '../../request-builder';\nexport function findAllFeedbacksByBook(http, rootUrl, params, context) {\n  const rb = new RequestBuilder(rootUrl, findAllFeedbacksByBook.PATH, 'get');\n  if (params) {\n    rb.path('book-id', params['book-id'], {});\n    rb.query('page', params.page, {});\n    rb.query('size', params.size, {});\n  }\n  return http.request(rb.build({\n    responseType: 'json',\n    accept: 'application/json',\n    context\n  })).pipe(filter(r => r instanceof HttpResponse), map(r => {\n    return r;\n  }));\n}\nfindAllFeedbacksByBook.PATH = '/feedbacks/book/{book-id}';","map":{"version":3,"names":["HttpResponse","filter","map","RequestBuilder","findAllFeedbacksByBook","http","rootUrl","params","context","rb","PATH","path","query","page","size","request","build","responseType","accept","pipe","r"],"sources":["C:\\Users\\Lautaro\\Desktop\\Desarrollo-web\\Proyectos\\book-social-network\\src\\app\\service\\fn\\feedback\\find-all-feedbacks-by-book.ts"],"sourcesContent":["/* tslint:disable */\r\n/* eslint-disable */\r\nimport { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { StrictHttpResponse } from '../../strict-http-response';\r\nimport { RequestBuilder } from '../../request-builder';\r\n\r\nimport { PageResponseFeedbackResponse } from '../../model/page-response-feedback-response';\r\n\r\nexport interface FindAllFeedbacksByBook$Params {\r\n  'book-id': number;\r\n  page?: number;\r\n  size?: number;\r\n}\r\n\r\nexport function findAllFeedbacksByBook(http: HttpClient, rootUrl: string, params: FindAllFeedbacksByBook$Params, context?: HttpContext): Observable<StrictHttpResponse<PageResponseFeedbackResponse>> {\r\n  const rb = new RequestBuilder(rootUrl, findAllFeedbacksByBook.PATH, 'get');\r\n  if (params) {\r\n    rb.path('book-id', params['book-id'], {});\r\n    rb.query('page', params.page, {});\r\n    rb.query('size', params.size, {});\r\n  }\r\n\r\n  return http.request(\r\n    rb.build({ responseType: 'json', accept: 'application/json', context })\r\n  ).pipe(\r\n    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),\r\n    map((r: HttpResponse<any>) => {\r\n      return r as StrictHttpResponse<PageResponseFeedbackResponse>;\r\n    })\r\n  );\r\n}\r\n\r\nfindAllFeedbacksByBook.PATH = '/feedbacks/book/{book-id}';"],"mappings":"AAAA;AACA;AACA,SAAkCA,YAAY,QAAQ,sBAAsB;AAE5E,SAASC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AAE5C,SAASC,cAAc,QAAQ,uBAAuB;AAUtD,OAAM,SAAUC,sBAAsBA,CAACC,IAAgB,EAAEC,OAAe,EAAEC,MAAqC,EAAEC,OAAqB;EACpI,MAAMC,EAAE,GAAG,IAAIN,cAAc,CAACG,OAAO,EAAEF,sBAAsB,CAACM,IAAI,EAAE,KAAK,CAAC;EAC1E,IAAIH,MAAM,EAAE;IACVE,EAAE,CAACE,IAAI,CAAC,SAAS,EAAEJ,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;IACzCE,EAAE,CAACG,KAAK,CAAC,MAAM,EAAEL,MAAM,CAACM,IAAI,EAAE,EAAE,CAAC;IACjCJ,EAAE,CAACG,KAAK,CAAC,MAAM,EAAEL,MAAM,CAACO,IAAI,EAAE,EAAE,CAAC;;EAGnC,OAAOT,IAAI,CAACU,OAAO,CACjBN,EAAE,CAACO,KAAK,CAAC;IAAEC,YAAY,EAAE,MAAM;IAAEC,MAAM,EAAE,kBAAkB;IAAEV;EAAO,CAAE,CAAC,CACxE,CAACW,IAAI,CACJlB,MAAM,CAAEmB,CAAM,IAA6BA,CAAC,YAAYpB,YAAY,CAAC,EACrEE,GAAG,CAAEkB,CAAoB,IAAI;IAC3B,OAAOA,CAAqD;EAC9D,CAAC,CAAC,CACH;AACH;AAEAhB,sBAAsB,CAACM,IAAI,GAAG,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}